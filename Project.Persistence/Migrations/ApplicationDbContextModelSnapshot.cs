// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Persistence;

namespace Project.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Project.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ExpireCode")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
            modelBuilder.Entity("Project.Domain.Entities.Banner", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Image")
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsActive")
                    .HasColumnType("bit");

                b.Property<DateTime>("UpdatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("UpdatedBy")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Url")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Banners");
            });

            modelBuilder.Entity("Project.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<bool?>("Special")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Project.Domain.Entities.DiscountCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("DiscountCodeType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("DiscountCodes");
                });

            modelBuilder.Entity("Project.Domain.Entities.DiscountCodesUsed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountCodeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiscountCodeId");

                    b.ToTable("DiscountCodesUseds");
                });

            modelBuilder.Entity("Project.Domain.Entities.Factor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<string>("DiscountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FinalAmount")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TaxAmount")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Factors");
                });

            modelBuilder.Entity("Project.Domain.Entities.JWTUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VerificationCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("JWTUsers");
                });

            modelBuilder.Entity("Project.Domain.Entities.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("ManualUrl")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("Project.Domain.Entities.News.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LocalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseRequestId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Project.Domain.Entities.News.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShowDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Project.Domain.Entities.News.NewsCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NewsCategories");
                });

            modelBuilder.Entity("Project.Domain.Entities.News.PurchaseRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<double>("DistancePrice")
                        .HasColumnType("float");

                    b.Property<double>("FinalPrice")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnlinePayment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<double>("PaidPrice")
                        .HasColumnType("float");

                    b.Property<string>("PhoneNumberAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postalcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseRequestStatus")
                        .HasColumnType("int");

                    b.Property<double>("SendPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PurchaseRequests");
                });

            modelBuilder.Entity("Project.Domain.Entities.News.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "SiteName",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "فرشوگاه آنلاین"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "MetaDescription",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم لورم ایپسوم متن ساختگی"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "MetaKeyWord",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم لورم ایپسوم متن ساختگی"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "ShortcutIcon",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/assets/images/icons/favicon.ico"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "HeaderIcon",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/assets/images/demos/demo-3/logo.png"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "FooterIcon",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/assets/images/demos/demo-3/logo.png"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "TopIcon",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/images/58fb25ef5ef526b9c362c81a839dd931eafb6a46_1707298697.gif"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "TopIconLink",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "#"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "TopIconBool",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "on"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "BigBanner",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/images/1690875299-esv04wsL6tPNeV3u.webp"
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "BigBannerLink",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "#"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "FirstBanner",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/images/20cfa2fef7747b0fde8ba6875a0788325f5d081d_1706101976.webp"
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "FirstBannerLink",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "#"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "SecondBanner",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/images/b596a2fd4ae4dd03bfb424ca83bd703af01ca85c_1706351348.webp"
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "SecondBannerLink",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "#"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "ThirdBanner",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/images/61ed3d9edfbf5ca49898b5a3f7b32293a5c2c26f_1683011290.webp"
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "ThirdBannerLink",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "#"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "AmazingOffersBanner",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/images/1.jpg"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step2Banner1",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/Images/0007575b0b65e5d07cf2abb9e9501880690c664e_1674463984.webp"
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step2Banner1Link",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "#"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step2Banner2",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/Images/6140b398a0438d11623c340df8654dc3e6b1bc41_1674462746.webp"
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step2Banner2Link",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "#"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step3Banner1",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/Images/6140b398a0438d11623c340df8654dc3e6b1bc41_1674462746.webp"
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step3Banner1Link",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "#"
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step3Banner2",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/Images/6140b398a0438d11623c340df8654dc3e6b1bc41_1674462746.webp"
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step3Banner2Link",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "#"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step3Banner3",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/Images/6140b398a0438d11623c340df8654dc3e6b1bc41_1674462746.webp"
                        },
                        new
                        {
                            Id = 344,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step3Banner3Link",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "#"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step3Banner4",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/Images/6140b398a0438d11623c340df8654dc3e6b1bc41_1674462746.webp"
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step3Banner4Link",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "#"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step4Banner",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "/Images/media-643e9c17da34f.jpg"
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Step4BannerLink",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "#"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Telegram",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = ""
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Instagram",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = ""
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Whatsapp",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = ""
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Email",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = ""
                        },
                        new
                        {
                            Id = 244,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "Telphone",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = ""
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "PhoneNumber",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = ""
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "FooterText",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم."
                        },
                        new
                        {
                            Id = 333,
                            CreatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            CreatedBy = "SYSTEM",
                            IsActive = true,
                            Key = "SendPrice",
                            UpdatedAt = new DateTime(2022, 1, 1, 1, 1, 1, 1, DateTimeKind.Utc),
                            UpdatedBy = "SYSTEM",
                            Value = "20000"
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.Pages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("Project.Domain.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FactorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurchaseRequestId")
                        .HasColumnType("int");

                    b.Property<long>("TrackingNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("TransactionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.HasIndex("PurchaseRequestId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Project.Domain.Entities.ProductModels.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attributes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("Inventory")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Special")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Project.Domain.Entities.ProductModels.ProductImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Project.Domain.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Project.Domain.Entities.TicketMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SeenByAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("SeenByUser")
                        .HasColumnType("bit");

                    b.Property<bool>("SentByUser")
                        .HasColumnType("bit");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketMessages");
                });

            modelBuilder.Entity("Project.Domain.Entities.UserInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOfBirthDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nationalcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postalcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserInformation");
                });

            modelBuilder.Entity("Project.Domain.Entities.Category", b =>
                {
                    b.HasOne("Project.Domain.Entities.Category", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Project.Domain.Entities.DiscountCode", b =>
                {
                    b.HasOne("Project.Domain.Entities.ProductModels.Product", "Product")
                        .WithMany("DiscountCodes")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Project.Domain.Entities.DiscountCodesUsed", b =>
                {
                    b.HasOne("Project.Domain.Entities.DiscountCode", "DiscountCode")
                        .WithMany("DiscountCodesUseds")
                        .HasForeignKey("DiscountCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscountCode");
                });

            modelBuilder.Entity("Project.Domain.Entities.Factor", b =>
                {
                    b.HasOne("Project.Domain.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Domain.Entities.MenuItem", b =>
                {
                    b.HasOne("Project.Domain.Entities.MenuItem", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Project.Domain.Entities.News.CartItem", b =>
                {
                    b.HasOne("Project.Domain.Entities.ProductModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Domain.Entities.News.PurchaseRequest", "PurchaseRequest")
                        .WithMany("CartItems")
                        .HasForeignKey("PurchaseRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("PurchaseRequest");
                });

            modelBuilder.Entity("Project.Domain.Entities.News.News", b =>
                {
                    b.HasOne("Project.Domain.Entities.News.NewsCategory", "Category")
                        .WithMany("News")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Project.Domain.Entities.News.PurchaseRequest", b =>
                {
                    b.HasOne("Project.Domain.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Domain.Entities.Payment", b =>
                {
                    b.HasOne("Project.Domain.Entities.Factor", "Factor")
                        .WithMany()
                        .HasForeignKey("FactorId");

                    b.HasOne("Project.Domain.Entities.News.PurchaseRequest", "PurchaseRequest")
                        .WithMany()
                        .HasForeignKey("PurchaseRequestId");

                    b.Navigation("Factor");

                    b.Navigation("PurchaseRequest");
                });

            modelBuilder.Entity("Project.Domain.Entities.ProductModels.Product", b =>
                {
                    b.HasOne("Project.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Project.Domain.Entities.ProductModels.ProductImages", b =>
                {
                    b.HasOne("Project.Domain.Entities.ProductModels.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Project.Domain.Entities.Ticket", b =>
                {
                    b.HasOne("Project.Domain.Entities.JWTUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Domain.Entities.TicketMessage", b =>
                {
                    b.HasOne("Project.Domain.Entities.Ticket", "Ticket")
                        .WithMany("Messages")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Project.Domain.Entities.Category", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Project.Domain.Entities.DiscountCode", b =>
                {
                    b.Navigation("DiscountCodesUseds");
                });

            modelBuilder.Entity("Project.Domain.Entities.MenuItem", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Project.Domain.Entities.News.NewsCategory", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("Project.Domain.Entities.News.PurchaseRequest", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("Project.Domain.Entities.ProductModels.Product", b =>
                {
                    b.Navigation("DiscountCodes");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("Project.Domain.Entities.Ticket", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
